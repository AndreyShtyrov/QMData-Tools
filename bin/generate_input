#!/usr/bin/env python
from BAGEL import bagel_config
import argparse

parser = argparse.ArgumentParser(description= " generate input files")
parser.add_argument("-method", type=str, default="casscf", help="set method of calc available : casscf, nevpt2, caspt2")
parser.add_argument("-type_job", type=str, default="force", help="set type of calc available: energy, force")
parser.add_argument("-active", type=str, help="set custom acitve space in format n_el:n_orbs")
parser.add_argument("-charge", type=int, help="set custom charge")
parser.add_argument("-mult", type=int, help="set custom mult")
parser.add_argument("-save", type=bool, help="set it is should save orbitals in the end of calc")
parser.add_argument("-n_state", type=int, help="set number of states in SA or MS calc")
parser.add_argument("-target", type=int, help="set root of interest, numeration start from 0")


atributes = ["active", "charge", "mult", "save", "n_state", "targe", "method", "type_job"]
config = dict()
args = parser.parse_args()
for atr_name in atributes:
    if hasattr(args, atr_name):
        if getattr(args, atr_name):
            config.update({atr_name: getattr(args, atr_name)})

bg = bagel_config(config)
bg.make_input_body()

